\section{Properties}
There are a number of interesting settings whose effects are deeply hidden within the framework. Properties are an easy way to access these settings and change them. Properties are represented by the class \src{DockProperties} which can be accessed through \src{getProperties} of \src{DockController}.

\src{DockProperties} is nothing else than a map. Instances of \src{PropertyKey} are used as keys. The type of the value depends on the key and the map is typesafe. With the help of a \src{DockPropertyListener} any object can be informed immediately when a value changes.

There are a number of keys and the remainder of this chapter will list all of the keys that are present in version 1.1.0. If not explicitly said otherwise, then any change in the properties will have an immediate effect.

\warningbox{Some of these properties are accessed and changed by \src{DockTheme}s. It is still possible to override these properties, but clients should be careful and ensure not to break the theme.}

\subsection{Themes}
\begin{description}
 \property{BasicTheme.BASIC\_COLOR\_SCHEME}{ColorScheme}{An instance of \src{BasicColorScheme}}{The \src{ColorScheme} used by \src{BasicTheme}.}
 \property{BubbleTheme.BUBBLE\_COLOR\_SCHEME}{ColorScheme}{An instance of \src{BubbleColorScheme}}{The \src{ColorScheme} used by \src{BubbleTheme}.}
 \property{FlatTheme.FLAT\_COLOR\_SCHEME}{ColorScheme}{An instance of \src{FlatColorScheme}}{The \src{ColorScheme} used by \src{FlatTheme}.}
 \property{EclipseTheme.ECLIPSE\_COLOR\_SCHEME}{ColorScheme}{An instance of \src{EclipseColorScheme}}{The \src{ColorScheme} used by \src{EclipseTheme}.}
 \property{EclipseTheme.PAINT\_ICONS\_WHEN\_DESELECTED}{Boolean}{\src{false}}{Whether to paint icons in tabs of \src{Dockable}s that are not selected. This setting might be ignored if a custom \src{TabPainter} is applied.}
 \property{EclipseTheme.TAB\_PAINTER}{TabPainter}{\src{ShapedGradientPainter.FACTORY}}{How to paint tabs in \src{EclipseTheme} for \src{Dockable}s.}
 \property{EclipseTheme.THEME\_CONNECTOR}{EclipseThemeConnector}{An instance of \src{DefaultEclipseThemeConnector}}{Tells how a lonly \src{Dockable} gets presented in \src{EclipseTheme}. \linebreak Whether it has a border and a title. Also tells which \src{DockAction}s are to be shown on tabs. Changing this entry will not affect decisions that were made by the previous connector.}
 \property{SingleTabDecider.SINGLE\_TAB\_DECIDER}{SingleTabDecider}{\src{SingleTabDecider.NONE}}{Tells whether a single tab should be painted for some \src{Dockable}s. This makes the \src{Dockable}s look as if they were a child of a \linebreak \src{StackDockStation} even if there is no such station around.}
 \property{DockTitle.ORIENTATION\_STRATEGY}{OrientationToRotationConverter}{\src{OrientationToRotationConverter.DEFAULT}}{Tells how to rotate text on a \src{DockTitle}.}

 \property{DockTheme.COMBINER}{Combiner}{An instance of \src{ThemeCombiner}}{The default value of the \src{Combiner}.}
 \property{DockTheme.DISPLAYER\_FACTORY}{DisplayerFactory}{An instance of \src{ThemeDisplayerFactory}}{The default value of the \src{DisplayerFactory}.}
 \property{DockTheme.DOCKABLE\_MOVING\_IMAGE\_FACTORY}{DockableMovingImageFactory}{An instance of \src{ThemeDockableMovingImageFactory}}{The defeault value of the \src{DockableMovingImageFactory}.}
 \src{DockTheme.DOCKABLE\_SELECTION}{DockableSelection}{An instance of \src{ThemeDockableSelection}}{The default value of the \src{DockableSelection}.}

\end{description}

\subsection{Stations}
\begin{description}
 \property{FlapDockStation.LAYOUT\_MANAGER}{FlapLayoutManager}{An instance of \src{DefaultFlapLayoutManager}}{Tells the initial size and whether to hold a \src{Dockable} in a \linebreak \src{FlapDockStation}. The default setting uses the same size for all \src{Dockable}s and forgets the hold-property as soon as a \src{Dockable} is removed from the station.}
 \property{FlapDockStation.BUTTON\_CONTENT}{ButtonContent}{\src{ButtonContent.THEME\_DEPENDENT}}{Tells which information to display on the buttons that represent \src{Dockable}s on a \src{FlapDockStation}. Any mix of icons, text and \src{DockAction}s is possible.}
 \property{FlapDockStation.BUTTON\_CONTENT\_FILTER}{ButtonContentFilter}{DefaultButtonContentFilter}{Tells which \src{DockAction}s should be shown on a button that represents a \src{Dockable} on a \src{FlapDockStation}.}
 \property{FlapDockStation.MINIMUM\_SIZE}{Dimension}{\src{10, 10}}{The minimal size of a \src{FlapDockStation} if it does not have any children.}
 \property{ScreenDockStation.BOUNDARY\_RESTRICTION}{BoundaryRestriction}{\src{BoundaryRestriction.FREE}}{Decides about the shape and location a \src{ScreenDockWindow} is allowed to have. E.g. \src{BoundaryRestriction} might force windows to be visible only on one of many screens.}
 \property{ScreenDockStation.WINDOW\_FACTORY}{ScreenDockWindowFactory}{An instance of \src{DefaultScreenDockWindowFactory}}{The factory used to create new windows for \src{ScreenDockStation}. Changing this property has no effect on existing windows. \linebreak \src{DefaultScreenDockWindowFactory} can be customized and should be preferred over newly written factories.}
 \property{ScreenDockStation.EXPAND\_ON\_DOUBLE\_CLICK}{Boolean}{\src{true}}{Whether a double click onto a title changes the fullscreen-mode of a child of a \src{ScreenDockStation}.}
 \property{ScreenDockStation.FULL\_SCREEN\_STRATEGY}{ScreenDockFullscreenStrategy}{An instance of \src{DefaultScreenDockFullscreenStrategy}}{Defines how a full-screen window looks like and how to switch between normal and full-screen mode.}
 \property{StackDockStation.COMPONENT\_FACTORY}{StackDockComponentFactory}{\src{null}}{Tells a \src{StackDockStation} how to arrange its children.}
 \property{StackDockStation.TAB\_CONTENT\_FILTER}{TabContentFilter}{\src{null}}{Allows to influence what content a tab on a \src{StackDockStation} contains. Does not apply on tabs that were created because of a \src{SingleTabDecider}.}
 \property{TabPane.LAYOUT\_MANAGER}{TabLayoutManager}{Depends on the current theme}{Tells how to order the tabs on a \src{StackDockStation}. Warning: some \src{StackDockComponent}s do not support all the features a layout manager may require.}
 \property{CombinedMenuContent.MENU\_CONTENT}{CombinedMenuContent}{an instanceof of \src{PopupCombinedMenuContent}}{Tells how to present the content of the \src{Dockable}-selection-menu that is used by a \src{StackDockStation} if not all tabs are visible.}
 \property{SplitDockStation.MAXIMIZE\_ACCELERATOR}{KeyStroke}{\src{ctrl+m}}{The keys that have to be pressed in order to maximize or normalize a child of \src{SplitDockStation}.}
 \property{SplitDockStation.LAYOUT\_MANAGER}{SplitLayoutManager}{An instance of \src{DefaultSplitLayoutManager}}{The \src{SplitLayoutManager} is responsible to handle most of the actions that can change the layout of a \src{SplitDockStation}}
 \property{PlaceholderStrategy.PLACEHOLDER\_STRATEGY}{PlaceholderStrategy}{\src{null}}{Maps \src{Dockable}s to placeholders allowing the layout to be much more stable when removing and adding \src{Dockable}s. Affects all stations.}
\end{description}

\subsection{Controlling}
\begin{description}
 \property{DockableSelector.INIT\_SELECTION}{KeyStroke}{\src{ctrl+shift+e}}{Hitting these keys will open a window where the user can select the focused \src{Dockable}.}
 \property{DockRelocatorMode.SCREEN\_MASK}{ModifierMask}{\src{shift}}{If these modifiers are pressed during a drag and drop operation then \src{DockRelocatorMode.SCREEN\_ONLY} gets activated. This will \linebreak force the \src{Dockable} to be dropped onto a \src{ScreenDockStation}.}
 \property{DockRelocatorMode.NO\_COMBINATION\_MASK}{ModifierMask}{\src{alt}}{If these modifiers are pressed during a drag and drop operation then \src{DockRelocatorMode.NO\_COMBINATION} gets activated. This will prevent the dropped \src{Dockable} from merging with another \src{Dockable}.}
 \property{DockFrontend.HIDE\_ACCELERATOR}{KeyStroke}{\src{ctrl+F4}}{If a \src{DockFrontend} is in use then hitting these keys will hide the currently focused \src{Dockable}.}
\end{description}
 
\subsection{Legacy}
\begin{description}
 \property{AWTComponentCaptureStrategy.STRATEGY}{AWTComponentCaptureStrategy}{\src{PAINT\_ALL\_STRATEGY}}{Tells how the framework can take a picture from a \src{Component} that is or contains an AWT-\src{Component}. Different strategies are available, some are more subtile but efficient, others are blunt but working under harsh conditions.}
\end{description}

\subsection{Gimmicks}
\begin{description}
 \property{PropertyKey.DOCKABLE\_ICON}{Icon}{\src{null}}{This icon is shown for any \src{Dockable} that has no icon set.}
 \property{PropertyKey.DOCKABLE\_TITLE}{String}{\src{null}}{This text is shown for any \src{Dockable} that has no title set.}
 \property{PropertyKey.DOCKABLE\_TOOLTIP}{String}{\src{null}}{This text is shown for any \src{Dockable} for which no tooltip was set.}
 \property{PropertyKey.DOCK\_STATION\_ICON}{Icon}{\src{null}}{This icon is shown for any \src{DockStation} that has no icon set.}
 \property{PropertyKey.DOCK\_STATION\_TITLE}{String}{\src{null}}{This text is shown for any \src{DockStation} that has no title set.}
 \property{PropertyKey.DOCK\_STATION\_TOOLTIP}{String}{\src{null}}{This text is shown for any \src{DockStation} for which no tooltip was set. }
\end{description}